services:
  tinyurl-api:
    build: .
    container_name: tinyurl-api-container
    env_file:
      - .env
    ports: 
      - "${HOST_PORT:?err}:8088"
    networks:
      - back-network
    environment:
      - DEBUG=${DEBUG:?err}
      - HOST_URL_OR_DOMEN=${HOST_URL_OR_DOMEN:?err}
      - HOST_PORT=${HOST_PORT:?err}
    command: ["./docker/run-api.sh"]
    depends_on:
      - db
      - redis
    restart: on-failure

  db:
    image: postgres:17
    container_name: tinyurl-db-container
    env_file:
      - .env
    ports: 
      - "${POSTGRES_EXTERNAL_PORT:?err}:${POSTGRES_INTERNAL_PORT:?err}"
    volumes:    
      - db-data:/var/lib/postgresql/data
    networks:
      - back-network
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}
    restart: on-failure

  redis:
    image: redis:7
    container_name: tinyurl-redis-container
    expose:
      - 5370
    volumes:
      - redis-data:/data
      # - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - back-network
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: --port 5370
    # command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  celery:
    build: .
    container_name: tinyurl-celery
    networks:
      - back-network
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["./docker/run-celery.sh", "celery"]
    depends_on:
      - redis
      - tinyurl-api
    restart: on-failure

  flower:
    build: .
    container_name: tinyurl-flower
    ports:
      - "8800:5555"
    networks:
      - back-network
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["./docker/run-celery.sh", "flower"]
    depends_on:
      - redis
      - tinyurl-api
      - celery
    restart: on-failure




volumes:
  db-data:
  redis-data:

networks:
  back-network: {}